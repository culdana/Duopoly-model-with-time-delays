(* 
  System of delay differential equations for two competing firms 
  with memory.
*)

sys[T_] := {
  (* Firm x's production rate *)
  x'[t] == al*x[t]*(a - c1 - 2*b*xd[t] - b*yd[t]),

  (* Firm y's production rate *)
  y'[t] == be*y[t]*(a - c2 - b*xd[t] - 2*b*yd[t]),

  (* Delayed memory dynamics using exponential smoothing *)
  xd'[t] == 1/T*(x[t] - xd[t]),
  yd'[t] == 1/T*(y[t] - yd[t]),

  (* Initial conditions *)
  x[0] == 2.8,
  y[0] == 2.2,
  xd[0] == 2.8,
  yd[0] == 2.2
};

(* Maximum simulation time *)
Tmax = 100;

(* Solve the system parametrically for various values of T *)
sol = ParametricNDSolve[
  sys[T], {x, y, xd, yd}, {t, 0, Tmax}, {T}
];

(* Plot of x(t) for different values of delay T *)
px = Plot[
  Evaluate[Table[x[T][t] /. sol, {T, 1, 10, 1}]], 
  {t, 0, Tmax}, 
  PlotRange -> All, 
  Axes -> False, 
  Frame -> True, 
  ImageSize -> {Automatic, 200}, 
  FrameLabel -> {None, "x"}, 
  LabelStyle -> Directive[Black, Medium], 
  AspectRatio -> 1/2
];

(* Plot of y(t) for different values of delay T *)
py = Plot[
  Evaluate[Table[y[T][t] /. sol, {T, 1, 10, 1}]], 
  {t, 0, Tmax}, 
  PlotRange -> All, 
  Axes -> False, 
  Frame -> True, 
  PlotLegends -> SwatchLegend[Table[Row[{"\[Tau]=", k}], {k, 1, 10, 1}]], 
  ImageSize -> {Automatic, 200}, 
  FrameLabel -> {None, "y"}, 
  LabelStyle -> Directive[Black, Medium], 
  AspectRatio -> 1/2
];
